/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PageView as PrismaPageView } from "@prisma/client";

export class PageViewServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PageViewCountArgs, "select">): Promise<number> {
    return this.prisma.pageView.count(args);
  }

  async pageViews(
    args: Prisma.PageViewFindManyArgs
  ): Promise<PrismaPageView[]> {
    return this.prisma.pageView.findMany(args);
  }
  async pageView(
    args: Prisma.PageViewFindUniqueArgs
  ): Promise<PrismaPageView | null> {
    return this.prisma.pageView.findUnique(args);
  }
  async createPageView(
    args: Prisma.PageViewCreateArgs
  ): Promise<PrismaPageView> {
    return this.prisma.pageView.create(args);
  }
  async updatePageView(
    args: Prisma.PageViewUpdateArgs
  ): Promise<PrismaPageView> {
    return this.prisma.pageView.update(args);
  }
  async deletePageView(
    args: Prisma.PageViewDeleteArgs
  ): Promise<PrismaPageView> {
    return this.prisma.pageView.delete(args);
  }
}
